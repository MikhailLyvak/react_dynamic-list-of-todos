{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["Loader","className","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todo","isOpened","closeModal","React","useState","userData","setUserData","isLoading","setIsLoading","useEffect","userId","Data","finally","fetchUser","id","type","onClick","title","completed","name","TodoList","todos","selectedTodo","setSelectedTodo","map","index","openModal","TodoFilter","setFilteredTodos","searchInput","setSearchInput","selectedStatus","setSelectedStatus","applyFilters","status","input","filteredTodos","filter","toLowerCase","includes","onChange","event","target","value","placeholder","currentTarget","App","setTodos","todosData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8553b85.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo;\n  isOpened: boolean;\n  closeModal: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, isOpened, closeModal }) => {\n  const [userData, setUserData] = React.useState<User | null>(null);\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchUser = () => {\n      getUser(todo.userId)\n        .then((Data) => {\n          setUserData(Data);\n        })\n        .finally(() => setIsLoading(false));\n    };\n\n    fetchUser();\n  }, [todo.userId]);\n\n  return (\n    <div className={isOpened ? 'modal is-active' : 'modal'} data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isOpened && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\" data-cy>\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n            <button\n              type=\"button\"\n              data-cy=\"modal-close\"\n              className=\"delete\"\n              onClick={closeModal}\n            >\n              <span aria-hidden=\"true\">x</span>\n            </button>\n          </header>\n          <div className=\"modal-card-body\">\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <>\n                <p className=\"block\" data-cy=\"modal-title\">{todo.title}</p>\n                <p className=\"block\" data-cy=\"modal-user\">\n                  <strong className={\n                    todo.completed ? 'has-text-success' : 'has-text-danger'\n                  }\n                  >\n                    {todo.completed ? 'Done' : 'Planned'}\n                  </strong>\n                  {' by '}\n                  <span>{userData?.name}</span>\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoModal } from '../TodoModal';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const openModal = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const closeModal = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map((todo, index) => (\n            <tr key={todo.id} data-cy=\"todo\" className=\"\">\n              <td className=\"is-vcentered\">{index + 1}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={\n                  todo.completed ? 'has-text-success' : 'has-text-danger'\n                }\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => openModal(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={\n                      selectedTodo !== todo ? 'far fa-eye' : 'far fa-eye-slash'\n                    }\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          isOpened={selectedTodo !== null}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n","import React, { ChangeEvent, FC, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoFilterProps {\n  todos: Todo[];\n  setFilteredTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n}\n\nexport const TodoFilter: FC<TodoFilterProps>\n  = ({ todos, setFilteredTodos }) => {\n    const [searchInput, setSearchInput] = useState<string>('');\n    const [selectedStatus, setSelectedStatus] = useState<string>('all');\n\n    const applyFilters = (status: string, input: string) => {\n      let filteredTodos = todos;\n\n      switch (status) {\n        case 'active':\n          filteredTodos = todos.filter((todo) => !todo.completed);\n          break;\n        case 'completed':\n          filteredTodos = todos.filter((todo) => todo.completed);\n          break;\n        default:\n          break;\n      }\n\n      if (input) {\n        filteredTodos = filteredTodos.filter((todo) => todo\n          .title.toLowerCase().includes(input));\n      }\n\n      setFilteredTodos(filteredTodos);\n    };\n\n    const handleStatusChange = (event: ChangeEvent<HTMLSelectElement>) => {\n      const status = event.target.value;\n\n      setSelectedStatus(status);\n      applyFilters(status, searchInput);\n    };\n\n    const handleSearchInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n      const input = event.currentTarget.value.toLowerCase();\n\n      setSearchInput(input);\n      applyFilters(selectedStatus, input);\n    };\n\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              onChange={handleStatusChange}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={searchInput}\n            onChange={handleSearchInputChange}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" />\n          </span>\n\n          <span className=\"icon is-right\">\n            {searchInput && (\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  setSearchInput('');\n                  applyFilters(selectedStatus, '');\n                }}\n              >\n                <span aria-hidden=\"true\">x</span>\n              </button>\n            )}\n          </span>\n        </p>\n      </form>\n    );\n  };\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchTodos = () => {\n      getTodos()\n        .then((todosData) => {\n          setTodos(todosData);\n          setFilteredTodos(todosData);\n        })\n        .finally(() => setIsLoading(false));\n    };\n\n    fetchTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter setFilteredTodos={setFilteredTodos} todos={todos} />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n              <TodoList todos={filteredTodos} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}